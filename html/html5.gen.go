// This package contain helper functions to make html as code.
package html

// THIS FILE GENERATED BY SCRIPT. YOU SHOULD NOT EDIT THIS FILE.

import "github.com/nyarla/hyperscript/node"

// Html makes to a `html` element.
func Html(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`html`, contains...)
}

// Base makes to a `base` element.
func Base(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`base`, contains...)
}

// Head makes to a `head` element.
func Head(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`head`, contains...)
}

// Link makes to a `link` element.
func Link(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`link`, contains...)
}

// Meta makes to a `meta` element.
func Meta(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`meta`, contains...)
}

// Style makes to a `style` element.
func Style(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`style`, contains...)
}

// Title makes to a `title` element.
func Title(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`title`, contains...)
}

// Body makes to a `body` element.
func Body(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`body`, contains...)
}

// Address makes to a `address` element.
func Address(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`address`, contains...)
}

// Article makes to a `article` element.
func Article(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`article`, contains...)
}

// Aside makes to a `aside` element.
func Aside(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`aside`, contains...)
}

// Footer makes to a `footer` element.
func Footer(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`footer`, contains...)
}

// Header makes to a `header` element.
func Header(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`header`, contains...)
}

// H1 makes to a `h1` element.
func H1(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`h1`, contains...)
}

// H2 makes to a `h2` element.
func H2(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`h2`, contains...)
}

// H3 makes to a `h3` element.
func H3(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`h3`, contains...)
}

// H4 makes to a `h4` element.
func H4(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`h4`, contains...)
}

// H5 makes to a `h5` element.
func H5(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`h5`, contains...)
}

// H6 makes to a `h6` element.
func H6(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`h6`, contains...)
}

// Main makes to a `main` element.
func Main(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`main`, contains...)
}

// Nav makes to a `nav` element.
func Nav(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`nav`, contains...)
}

// Section makes to a `section` element.
func Section(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`section`, contains...)
}

// Blockquote makes to a `blockquote` element.
func Blockquote(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`blockquote`, contains...)
}

// Dd makes to a `dd` element.
func Dd(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`dd`, contains...)
}

// Div makes to a `div` element.
func Div(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`div`, contains...)
}

// Dl makes to a `dl` element.
func Dl(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`dl`, contains...)
}

// Dt makes to a `dt` element.
func Dt(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`dt`, contains...)
}

// Figcaption makes to a `figcaption` element.
func Figcaption(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`figcaption`, contains...)
}

// Figure makes to a `figure` element.
func Figure(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`figure`, contains...)
}

// Hr makes to a `hr` element.
func Hr(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`hr`, contains...)
}

// Li makes to a `li` element.
func Li(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`li`, contains...)
}

// Menu makes to a `menu` element.
func Menu(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`menu`, contains...)
}

// Ol makes to a `ol` element.
func Ol(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`ol`, contains...)
}

// P makes to a `p` element.
func P(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`p`, contains...)
}

// Pre makes to a `pre` element.
func Pre(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`pre`, contains...)
}

// Ul makes to a `ul` element.
func Ul(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`ul`, contains...)
}

// A makes to a `a` element.
func A(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`a`, contains...)
}

// Abbr makes to a `abbr` element.
func Abbr(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`abbr`, contains...)
}

// B makes to a `b` element.
func B(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`b`, contains...)
}

// Bdi makes to a `bdi` element.
func Bdi(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`bdi`, contains...)
}

// Bdo makes to a `bdo` element.
func Bdo(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`bdo`, contains...)
}

// Br makes to a `br` element.
func Br(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`br`, contains...)
}

// Cite makes to a `cite` element.
func Cite(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`cite`, contains...)
}

// Code makes to a `code` element.
func Code(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`code`, contains...)
}

// Data makes to a `data` element.
func Data(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`data`, contains...)
}

// Em makes to a `em` element.
func Em(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`em`, contains...)
}

// I makes to a `i` element.
func I(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`i`, contains...)
}

// Kbd makes to a `kbd` element.
func Kbd(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`kbd`, contains...)
}

// Mark makes to a `mark` element.
func Mark(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`mark`, contains...)
}

// Q makes to a `q` element.
func Q(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`q`, contains...)
}

// Rp makes to a `rp` element.
func Rp(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`rp`, contains...)
}

// Rt makes to a `rt` element.
func Rt(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`rt`, contains...)
}

// Ruby makes to a `ruby` element.
func Ruby(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`ruby`, contains...)
}

// S makes to a `s` element.
func S(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`s`, contains...)
}

// Samp makes to a `samp` element.
func Samp(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`samp`, contains...)
}

// Small makes to a `small` element.
func Small(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`small`, contains...)
}

// Span makes to a `span` element.
func Span(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`span`, contains...)
}

// Strong makes to a `strong` element.
func Strong(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`strong`, contains...)
}

// Sub makes to a `sub` element.
func Sub(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`sub`, contains...)
}

// Sup makes to a `sup` element.
func Sup(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`sup`, contains...)
}

// Time makes to a `time` element.
func Time(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`time`, contains...)
}

// U makes to a `u` element.
func U(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`u`, contains...)
}

// Var makes to a `var` element.
func Var(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`var`, contains...)
}

// Wbr makes to a `wbr` element.
func Wbr(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`wbr`, contains...)
}

// Area makes to a `area` element.
func Area(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`area`, contains...)
}

// Audio makes to a `audio` element.
func Audio(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`audio`, contains...)
}

// Img makes to a `img` element.
func Img(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`img`, contains...)
}

// Map makes to a `map` element.
func Map(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`map`, contains...)
}

// Track makes to a `track` element.
func Track(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`track`, contains...)
}

// Video makes to a `video` element.
func Video(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`video`, contains...)
}

// Embed makes to a `embed` element.
func Embed(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`embed`, contains...)
}

// Iframe makes to a `iframe` element.
func Iframe(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`iframe`, contains...)
}

// Object makes to a `object` element.
func Object(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`object`, contains...)
}

// Picture makes to a `picture` element.
func Picture(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`picture`, contains...)
}

// Portal makes to a `portal` element.
func Portal(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`portal`, contains...)
}

// Source makes to a `source` element.
func Source(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`source`, contains...)
}

// Svg makes to a `svg` element.
func Svg(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`svg`, contains...)
}

// Math makes to a `math` element.
func Math(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`math`, contains...)
}

// Canvas makes to a `canvas` element.
func Canvas(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`canvas`, contains...)
}

// Noscript makes to a `noscript` element.
func Noscript(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`noscript`, contains...)
}

// Script makes to a `script` element.
func Script(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`script`, contains...)
}

// Del makes to a `del` element.
func Del(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`del`, contains...)
}

// Ins makes to a `ins` element.
func Ins(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`ins`, contains...)
}

// Caption makes to a `caption` element.
func Caption(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`caption`, contains...)
}

// Col makes to a `col` element.
func Col(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`col`, contains...)
}

// Colgroup makes to a `colgroup` element.
func Colgroup(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`colgroup`, contains...)
}

// Table makes to a `table` element.
func Table(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`table`, contains...)
}

// Tbody makes to a `tbody` element.
func Tbody(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`tbody`, contains...)
}

// Td makes to a `td` element.
func Td(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`td`, contains...)
}

// Tfoot makes to a `tfoot` element.
func Tfoot(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`tfoot`, contains...)
}

// Th makes to a `th` element.
func Th(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`th`, contains...)
}

// Thead makes to a `thead` element.
func Thead(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`thead`, contains...)
}

// Tr makes to a `tr` element.
func Tr(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`tr`, contains...)
}

// Button makes to a `button` element.
func Button(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`button`, contains...)
}

// Datalist makes to a `datalist` element.
func Datalist(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`datalist`, contains...)
}

// Fieldset makes to a `fieldset` element.
func Fieldset(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`fieldset`, contains...)
}

// Form makes to a `form` element.
func Form(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`form`, contains...)
}

// Input makes to a `input` element.
func Input(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`input`, contains...)
}

// Label makes to a `label` element.
func Label(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`label`, contains...)
}

// Legend makes to a `legend` element.
func Legend(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`legend`, contains...)
}

// Meter makes to a `meter` element.
func Meter(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`meter`, contains...)
}

// Optgroup makes to a `optgroup` element.
func Optgroup(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`optgroup`, contains...)
}

// Option makes to a `option` element.
func Option(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`option`, contains...)
}

// Output makes to a `output` element.
func Output(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`output`, contains...)
}

// Progress makes to a `progress` element.
func Progress(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`progress`, contains...)
}

// Select makes to a `select` element.
func Select(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`select`, contains...)
}

// Textarea makes to a `textarea` element.
func Textarea(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`textarea`, contains...)
}

// Details makes to a `details` element.
func Details(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`details`, contains...)
}

// Dialog makes to a `dialog` element.
func Dialog(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`dialog`, contains...)
}

// Summary makes to a `summary` element.
func Summary(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`summary`, contains...)
}

// Slot makes to a `slot` element.
func Slot(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`slot`, contains...)
}

// Template makes to a `template` element.
func Template(contains ...node.NodeStringer) node.NodeStringer {
	return node.Node(`template`, contains...)
}

// Accept makes to a `accept` html attribute.
func Accept(v string) node.NodeStringer {
	return node.Attr(`accept`, v)
}

// AcceptCharset makes to a `accept-charset` html attribute.
func AcceptCharset(v string) node.NodeStringer {
	return node.Attr(`accept-charset`, v)
}

// AccessKey makes to a `accesskey` html attribute.
func AccessKey(v string) node.NodeStringer {
	return node.Attr(`accesskey`, v)
}

// Action makes to a `action` html attribute.
func Action(v string) node.NodeStringer {
	return node.Attr(`action`, v)
}

// Allow makes to a `allow` html attribute.
func Allow(v string) node.NodeStringer {
	return node.Attr(`allow`, v)
}

// Alt makes to a `alt` html attribute.
func Alt(v string) node.NodeStringer {
	return node.Attr(`alt`, v)
}

// Async makes to a `async` html attribute.
func Async(v string) node.NodeStringer {
	return node.Attr(`async`, v)
}

// AutoCapitalize makes to a `autocapitalize` html attribute.
func AutoCapitalize(v string) node.NodeStringer {
	return node.Attr(`autocapitalize`, v)
}

// AutoComplete makes to a `autocomplete` html attribute.
func AutoComplete(v string) node.NodeStringer {
	return node.Attr(`autocomplete`, v)
}

// AutoFocus makes to a `autofocus` html attribute.
func AutoFocus(v string) node.NodeStringer {
	return node.Attr(`autofocus`, v)
}

// AutoPlay makes to a `autoplay` html attribute.
func AutoPlay(v string) node.NodeStringer {
	return node.Attr(`autoplay`, v)
}

// Buffered makes to a `buffered` html attribute.
func Buffered(v string) node.NodeStringer {
	return node.Attr(`buffered`, v)
}

// Capture makes to a `capture` html attribute.
func Capture(v string) node.NodeStringer {
	return node.Attr(`capture`, v)
}

// Challenge makes to a `challenge` html attribute.
func Challenge(v string) node.NodeStringer {
	return node.Attr(`challenge`, v)
}

// Charset makes to a `charset` html attribute.
func Charset(v string) node.NodeStringer {
	return node.Attr(`charset`, v)
}

// Checked makes to a `checked` html attribute.
func Checked(v string) node.NodeStringer {
	return node.Attr(`checked`, v)
}

// CiteA makes to a `cite` html attribute.
func CiteA(v string) node.NodeStringer {
	return node.Attr(`cite`, v)
}

// Class makes to a `class` html attribute.
func Class(v string) node.NodeStringer {
	return node.Attr(`class`, v)
}

// Cols makes to a `cols` html attribute.
func Cols(v string) node.NodeStringer {
	return node.Attr(`cols`, v)
}

// Colspan makes to a `colspan` html attribute.
func Colspan(v string) node.NodeStringer {
	return node.Attr(`colspan`, v)
}

// Content makes to a `content` html attribute.
func Content(v string) node.NodeStringer {
	return node.Attr(`content`, v)
}

// ContentEditable makes to a `contenteditable` html attribute.
func ContentEditable(v string) node.NodeStringer {
	return node.Attr(`contenteditable`, v)
}

// ContextMenu makes to a `contextmenu` html attribute.
func ContextMenu(v string) node.NodeStringer {
	return node.Attr(`contextmenu`, v)
}

// Controls makes to a `controls` html attribute.
func Controls(v string) node.NodeStringer {
	return node.Attr(`controls`, v)
}

// Coords makes to a `coords` html attribute.
func Coords(v string) node.NodeStringer {
	return node.Attr(`coords`, v)
}

// CrossOrigin makes to a `crossorigin` html attribute.
func CrossOrigin(v string) node.NodeStringer {
	return node.Attr(`crossorigin`, v)
}

// Datetime makes to a `datetime` html attribute.
func Datetime(v string) node.NodeStringer {
	return node.Attr(`datetime`, v)
}

// Decoding makes to a `decoding` html attribute.
func Decoding(v string) node.NodeStringer {
	return node.Attr(`decoding`, v)
}

// Default makes to a `default` html attribute.
func Default(v string) node.NodeStringer {
	return node.Attr(`default`, v)
}

// Defer makes to a `defer` html attribute.
func Defer(v string) node.NodeStringer {
	return node.Attr(`defer`, v)
}

// Dir makes to a `dir` html attribute.
func Dir(v string) node.NodeStringer {
	return node.Attr(`dir`, v)
}

// Dirname makes to a `dirname` html attribute.
func Dirname(v string) node.NodeStringer {
	return node.Attr(`dirname`, v)
}

// Disabled makes to a `disabled` html attribute.
func Disabled(v string) node.NodeStringer {
	return node.Attr(`disabled`, v)
}

// Download makes to a `download` html attribute.
func Download(v string) node.NodeStringer {
	return node.Attr(`download`, v)
}

// Draggable makes to a `draggable` html attribute.
func Draggable(v string) node.NodeStringer {
	return node.Attr(`draggable`, v)
}

// Enctype makes to a `enctype` html attribute.
func Enctype(v string) node.NodeStringer {
	return node.Attr(`enctype`, v)
}

// For makes to a `for` html attribute.
func For(v string) node.NodeStringer {
	return node.Attr(`for`, v)
}

// FormA makes to a `form` html attribute.
func FormA(v string) node.NodeStringer {
	return node.Attr(`form`, v)
}

// FormAction makes to a `formaction` html attribute.
func FormAction(v string) node.NodeStringer {
	return node.Attr(`formaction`, v)
}

// FormEnctype makes to a `formenctype` html attribute.
func FormEnctype(v string) node.NodeStringer {
	return node.Attr(`formenctype`, v)
}

// FormMethod makes to a `formmethod` html attribute.
func FormMethod(v string) node.NodeStringer {
	return node.Attr(`formmethod`, v)
}

// FormNovalidate makes to a `formnovalidate` html attribute.
func FormNovalidate(v string) node.NodeStringer {
	return node.Attr(`formnovalidate`, v)
}

// FormTarget makes to a `formtarget` html attribute.
func FormTarget(v string) node.NodeStringer {
	return node.Attr(`formtarget`, v)
}

// Headers makes to a `headers` html attribute.
func Headers(v string) node.NodeStringer {
	return node.Attr(`headers`, v)
}

// Height makes to a `height` html attribute.
func Height(v string) node.NodeStringer {
	return node.Attr(`height`, v)
}

// Hidden makes to a `hidden` html attribute.
func Hidden(v string) node.NodeStringer {
	return node.Attr(`hidden`, v)
}

// High makes to a `high` html attribute.
func High(v string) node.NodeStringer {
	return node.Attr(`high`, v)
}

// Href makes to a `href` html attribute.
func Href(v string) node.NodeStringer {
	return node.Attr(`href`, v)
}

// Hreflang makes to a `hreflang` html attribute.
func Hreflang(v string) node.NodeStringer {
	return node.Attr(`hreflang`, v)
}

// HttpEquiv makes to a `httpequiv` html attribute.
func HttpEquiv(v string) node.NodeStringer {
	return node.Attr(`httpequiv`, v)
}

// Id makes to a `id` html attribute.
func Id(v string) node.NodeStringer {
	return node.Attr(`id`, v)
}

// Integrity makes to a `integrity` html attribute.
func Integrity(v string) node.NodeStringer {
	return node.Attr(`integrity`, v)
}

// Ismap makes to a `ismap` html attribute.
func Ismap(v string) node.NodeStringer {
	return node.Attr(`ismap`, v)
}

// ItemProp makes to a `itemprop` html attribute.
func ItemProp(v string) node.NodeStringer {
	return node.Attr(`itemprop`, v)
}

// Keytype makes to a `keytype` html attribute.
func Keytype(v string) node.NodeStringer {
	return node.Attr(`keytype`, v)
}

// Kind makes to a `kind` html attribute.
func Kind(v string) node.NodeStringer {
	return node.Attr(`kind`, v)
}

// LabelA makes to a `label` html attribute.
func LabelA(v string) node.NodeStringer {
	return node.Attr(`label`, v)
}

// Lang makes to a `lang` html attribute.
func Lang(v string) node.NodeStringer {
	return node.Attr(`lang`, v)
}

// List makes to a `list` html attribute.
func List(v string) node.NodeStringer {
	return node.Attr(`list`, v)
}

// Loop makes to a `loop` html attribute.
func Loop(v string) node.NodeStringer {
	return node.Attr(`loop`, v)
}

// Low makes to a `low` html attribute.
func Low(v string) node.NodeStringer {
	return node.Attr(`low`, v)
}

// Max makes to a `max` html attribute.
func Max(v string) node.NodeStringer {
	return node.Attr(`max`, v)
}

// MaxLength makes to a `maxlength` html attribute.
func MaxLength(v string) node.NodeStringer {
	return node.Attr(`maxlength`, v)
}

// MinLength makes to a `minlength` html attribute.
func MinLength(v string) node.NodeStringer {
	return node.Attr(`minlength`, v)
}

// Media makes to a `media` html attribute.
func Media(v string) node.NodeStringer {
	return node.Attr(`media`, v)
}

// Method makes to a `method` html attribute.
func Method(v string) node.NodeStringer {
	return node.Attr(`method`, v)
}

// Min makes to a `min` html attribute.
func Min(v string) node.NodeStringer {
	return node.Attr(`min`, v)
}

// Multiple makes to a `multiple` html attribute.
func Multiple(v string) node.NodeStringer {
	return node.Attr(`multiple`, v)
}

// Muted makes to a `muted` html attribute.
func Muted(v string) node.NodeStringer {
	return node.Attr(`muted`, v)
}

// Name makes to a `name` html attribute.
func Name(v string) node.NodeStringer {
	return node.Attr(`name`, v)
}

// Novalidate makes to a `novalidate` html attribute.
func Novalidate(v string) node.NodeStringer {
	return node.Attr(`novalidate`, v)
}

// Open makes to a `open` html attribute.
func Open(v string) node.NodeStringer {
	return node.Attr(`open`, v)
}

// Optimum makes to a `optimum` html attribute.
func Optimum(v string) node.NodeStringer {
	return node.Attr(`optimum`, v)
}

// Pattern makes to a `pattern` html attribute.
func Pattern(v string) node.NodeStringer {
	return node.Attr(`pattern`, v)
}

// Ping makes to a `ping` html attribute.
func Ping(v string) node.NodeStringer {
	return node.Attr(`ping`, v)
}

// Placeholder makes to a `placeholder` html attribute.
func Placeholder(v string) node.NodeStringer {
	return node.Attr(`placeholder`, v)
}

// PlaySinline makes to a `playsinline` html attribute.
func PlaySinline(v string) node.NodeStringer {
	return node.Attr(`playsinline`, v)
}

// Poster makes to a `poster` html attribute.
func Poster(v string) node.NodeStringer {
	return node.Attr(`poster`, v)
}

// Preload makes to a `preload` html attribute.
func Preload(v string) node.NodeStringer {
	return node.Attr(`preload`, v)
}

// Readonly makes to a `readonly` html attribute.
func Readonly(v string) node.NodeStringer {
	return node.Attr(`readonly`, v)
}

// ReferrerPolicy makes to a `referrerpolicy` html attribute.
func ReferrerPolicy(v string) node.NodeStringer {
	return node.Attr(`referrerpolicy`, v)
}

// Rel makes to a `rel` html attribute.
func Rel(v string) node.NodeStringer {
	return node.Attr(`rel`, v)
}

// Required makes to a `required` html attribute.
func Required(v string) node.NodeStringer {
	return node.Attr(`required`, v)
}

// Reversed makes to a `reversed` html attribute.
func Reversed(v string) node.NodeStringer {
	return node.Attr(`reversed`, v)
}

// Role makes to a `role` html attribute.
func Role(v string) node.NodeStringer {
	return node.Attr(`role`, v)
}

// Rows makes to a `rows` html attribute.
func Rows(v string) node.NodeStringer {
	return node.Attr(`rows`, v)
}

// RowSpan makes to a `rowspan` html attribute.
func RowSpan(v string) node.NodeStringer {
	return node.Attr(`rowspan`, v)
}

// Sandbox makes to a `sandbox` html attribute.
func Sandbox(v string) node.NodeStringer {
	return node.Attr(`sandbox`, v)
}

// Scope makes to a `scope` html attribute.
func Scope(v string) node.NodeStringer {
	return node.Attr(`scope`, v)
}

// Scoped makes to a `scoped` html attribute.
func Scoped(v string) node.NodeStringer {
	return node.Attr(`scoped`, v)
}

// Selected makes to a `selected` html attribute.
func Selected(v string) node.NodeStringer {
	return node.Attr(`selected`, v)
}

// Shape makes to a `shape` html attribute.
func Shape(v string) node.NodeStringer {
	return node.Attr(`shape`, v)
}

// Size makes to a `size` html attribute.
func Size(v string) node.NodeStringer {
	return node.Attr(`size`, v)
}

// Sizes makes to a `sizes` html attribute.
func Sizes(v string) node.NodeStringer {
	return node.Attr(`sizes`, v)
}

// SlotA makes to a `slot` html attribute.
func SlotA(v string) node.NodeStringer {
	return node.Attr(`slot`, v)
}

// SpanA makes to a `span` html attribute.
func SpanA(v string) node.NodeStringer {
	return node.Attr(`span`, v)
}

// SpellCheck makes to a `spellcheck` html attribute.
func SpellCheck(v string) node.NodeStringer {
	return node.Attr(`spellcheck`, v)
}

// Src makes to a `src` html attribute.
func Src(v string) node.NodeStringer {
	return node.Attr(`src`, v)
}

// Srcdoc makes to a `srcdoc` html attribute.
func Srcdoc(v string) node.NodeStringer {
	return node.Attr(`srcdoc`, v)
}

// SrcLang makes to a `srclang` html attribute.
func SrcLang(v string) node.NodeStringer {
	return node.Attr(`srclang`, v)
}

// SrcSet makes to a `srcset` html attribute.
func SrcSet(v string) node.NodeStringer {
	return node.Attr(`srcset`, v)
}

// Start makes to a `start` html attribute.
func Start(v string) node.NodeStringer {
	return node.Attr(`start`, v)
}

// Step makes to a `step` html attribute.
func Step(v string) node.NodeStringer {
	return node.Attr(`step`, v)
}

// StyleA makes to a `style` html attribute.
func StyleA(v string) node.NodeStringer {
	return node.Attr(`style`, v)
}

// SummaryA makes to a `summary` html attribute.
func SummaryA(v string) node.NodeStringer {
	return node.Attr(`summary`, v)
}

// TabIndex makes to a `tabindex` html attribute.
func TabIndex(v string) node.NodeStringer {
	return node.Attr(`tabindex`, v)
}

// Target makes to a `target` html attribute.
func Target(v string) node.NodeStringer {
	return node.Attr(`target`, v)
}

// TitleA makes to a `title` html attribute.
func TitleA(v string) node.NodeStringer {
	return node.Attr(`title`, v)
}

// Translate makes to a `translate` html attribute.
func Translate(v string) node.NodeStringer {
	return node.Attr(`translate`, v)
}

// Type makes to a `type` html attribute.
func Type(v string) node.NodeStringer {
	return node.Attr(`type`, v)
}

// UseMap makes to a `usemap` html attribute.
func UseMap(v string) node.NodeStringer {
	return node.Attr(`usemap`, v)
}

// Value makes to a `value` html attribute.
func Value(v string) node.NodeStringer {
	return node.Attr(`value`, v)
}

// Width makes to a `width` html attribute.
func Width(v string) node.NodeStringer {
	return node.Attr(`width`, v)
}

// Wrap makes to a `wrap` html attribute.
func Wrap(v string) node.NodeStringer {
	return node.Attr(`wrap`, v)
}
